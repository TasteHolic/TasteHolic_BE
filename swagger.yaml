openapi: 3.0.0
info:
  title: TasteHolic API
  description: TasteHolic API 서버 문서
  version: 1.0.0
servers:
  - url: http://localhost:3000 # 추후 수정 필요
    description: Local server
# 예시
paths:
  /api/v1/users/my-bar/post:
    post:
      summary: 마이바에 술 추가
      description: 술 종류와 이름으로 술 등록.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "까베르네 쇼비뇽"
                category:
                  type: string
                  example: "Wine"
      tags:
        - MyBar
      responses:
        200:
          description: 등록한 술 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: object
                    nullable: true
                    properties:
                      code:
                        type: string
                        example: null
                      message:
                        type: string
                        example: null
                  success:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "9"
                      userId:
                        type: string
                        example: "1"
                      alcoholId:
                        type: string
                        nullable: true
                        example: null
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-01T09:48:17.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-01T09:48:17.000Z"
                      name:
                        type: string
                        example: null
                      category:
                        type: string
                        example: null
        400:
          description: 잘못된 요청 (이미 마이바에 추가된 술)
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "U001"
                      message:
                        type: string
                        example: "이미 마이바에 추가되어 있는 술입니다."
                  success:
                    type: object
                    nullable: true
                    example: null
  /api/v1/users/my-bar/view:
    get:
      summary: 마이바 조회
      description: 특정 사용자의 마이바에 있는 술 리스트를 반환.
      tags:
        - MyBar
      responses:
        200:
          description: 사용자의 마이바 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: object
                    nullable: true
                    properties:
                      code:
                        type: string
                        example: null
                      message:
                        type: string
                        example: null
                  success:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "9"
                            userId:
                              type: string
                              example: "1"
                            alcoholId:
                              type: string
                              nullable: true
                              example: null
                            createdAt:
                              type: string
                              format: date-time
                              example: "2025-02-01T09:48:17.000Z"
                            updatedAt:
                              type: string
                              format: date-time
                              example: "2025-02-01T09:48:17.000Z"
                            name:
                              type: string
                              example: "까베르네 쇼비뇽"
                            category:
                              type: string
                              example: "Wine"
  /api/v1/users/my-bar/delete/{barId}:
    delete:
      summary: 마이바의 특정 술 삭제
      description: 삭제한 술 정보를 반환.
      parameters:
        - in: path
          name: barId
          schema:
            type: integer
      tags:
        - MyBar
      responses:
        200:
          description: 삭제한 술 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: object
                    nullable: true
                    properties:
                      code:
                        type: string
                        example: null
                      message:
                        type: string
                        example: null
                  success:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "9"
                      userId:
                        type: string
                        example: "1"
                      alcoholId:
                        type: string
                        nullable: true
                        example: null
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-01T09:48:17.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-01T09:48:17.000Z"
                      name:
                        type: string
                        example: null
                      category:
                        type: string
                        example: null
        400:
          description: 잘못된 요청 (마이바에 없는 술)
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "U002"
                      message:
                        type: string
                        example: "마이바에 존재하지 않는 술입니다."
                  success:
                    type: object
                    nullable: true
                    example: null
  /api/v1/recipes:
    post:
      summary: 유저 레시피 등록
      description: 새로운 유저 레시피를 등록합니다.
      operationId: createUserRecipe
      tags:
        - Recipes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - ingredients
                - recipe
                - glassType
                - status
                - abv
              properties:
                name:
                  type: string
                  example: "SampleDrink"
                ingredients:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    "라임 웨지": "3개"
                    "민트 잎": "7개"
                    "심플 시럽": "3/4 온스"
                    "라이트 럼": "2 온스"
                    "소다수": "적당량"
                recipe:
                  type: array
                  items:
                    type: string
                  example:
                    - "재료들을 함께 넣고 섞는다"
                    - "차갑게 마신다"
                glassType:
                  type: string
                  example: "Martini"
                status:
                  type: string
                  enum: [published, draft]
                  example: "published"
                tastes:
                  type: array
                  items:
                    type: string
                  example: ["Sweet", "Sour"]
                aromas:
                  type: array
                  items:
                    type: string
                  example: ["Citrus"]
                colors:
                  type: array
                  items:
                    type: string
                  example: ["#FFFFFF"]
                abv:
                  type: number
                  example: 12
      responses:
        "200":
          description: 레시피 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      userId:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "SampleDrink"
                      imageUrl:
                        type: string
                        nullable: true
                        example: "example/test.jpg"
                      ingredients:
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          "소다수": "적당량"
                          "민트 잎": "5개"
                          "라이트 럼": "3 온스"
                          "라임 웨지": "2개"
                          "심플 시럽": "1 온스"
                      recipe:
                        type: array
                        items:
                          type: string
                        example:
                          - "재료들을 함께 넣고 흔든다"
                          - "얼음과 함께 차갑게 마신다"
                      glassType:
                        type: string
                        example: "Old Fashioned"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T14:00:50.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T15:30:20.000Z"
                      status:
                        type: string
                        enum: [published, draft]
                        example: "published"
                      tastes:
                        type: array
                        items:
                          type: string
                        example: ["Sweet", "Bitter"]
                      aromas:
                        type: array
                        items:
                          type: string
                        example: ["Woody"]
                      colors:
                        type: array
                        items:
                          type: string
                        nullable: true
                        example: ["#FFFFFF"]
                      likes:
                        type: integer
                        example: 0
                      abv:
                        type: number
                        example: 15
                      views:
                        type: integer
                        example: 10
  /api/v1/recipes/{recipeId}:
    patch:
      summary: 레시피 수정
      description: 기존 레시피를 수정합니다. 레시피 소유자만 수정할 수 있습니다.
      tags:
        - Recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
          description: 수정할 레시피 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated SampleDrink"
                ingredients:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    "라임 웨지": "2개"
                    "민트 잎": "5개"
                    "심플 시럽": "1 온스"
                    "라이트 럼": "3 온스"
                    "소다수": "적당량"
                recipe:
                  type: array
                  items:
                    type: string
                  example:
                    - "재료들을 함께 넣고 흔든다"
                    - "얼음과 함께 차갑게 마신다"
                glassType:
                  type: string
                  example: "Old Fashioned"
                status:
                  type: string
                  enum: [published, draft]
                  example: "published"
                tastes:
                  type: array
                  items:
                    type: string
                  example: ["Sweet", "Bitter"]
                aromas:
                  type: array
                  items:
                    type: string
                  example: ["Woody"]
                colors:
                  type: array
                  items:
                    type: string
                  nullable: true
                  example: ["#FFFFFF"]
                abv:
                  type: number
                  example: 15
      responses:
        "200":
          description: 레시피 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      userId:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Updated SampleDrink"
                      imageUrl:
                        type: string
                        nullable: true
                        example: "example/test.jpg"
                      ingredients:
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          "소다수": "적당량"
                          "민트 잎": "5개"
                          "라이트 럼": "3 온스"
                          "라임 웨지": "2개"
                          "심플 시럽": "1 온스"
                      recipe:
                        type: array
                        items:
                          type: string
                        example:
                          - "재료들을 함께 넣고 흔든다"
                          - "얼음과 함께 차갑게 마신다"
                      glassType:
                        type: string
                        example: "Old Fashioned"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T14:00:50.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T15:30:20.000Z"
                      status:
                        type: string
                        enum: [published, draft]
                        example: "published"
                      tastes:
                        type: array
                        items:
                          type: string
                        example: ["Sweet", "Bitter"]
                      aromas:
                        type: array
                        items:
                          type: string
                        example: ["Woody"]
                      colors:
                        type: array
                        items:
                          type: string
                        nullable: true
                        example: ["#FFFFFF"]
                      likes:
                        type: integer
                        example: 0
                      abv:
                        type: number
                        example: 15
                      views:
                        type: integer
                        example: 10
        "404":
          description: 존재하지 않는 레시피
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "R001"
                      message:
                        type: string
                        example: "해당 레시피를 찾을 수 없습니다."
                  success:
                    type: "null"
                    example: null
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "U001"
                      message:
                        type: string
                        example: "수정 권한이 없습니다."
                  success:
                    type: "null"
                    example: null
    get:
      summary: 레시피 조회
      description: 유저 레시피 또는 칵테일 레시피를 조회합니다.
      operationId: getRecipe
      tags:
        - Recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
          description: |
            조회할 레시피 ID.  
            - 유저 레시피 → `user-000`  
            - 칵테일 레시피 → `cocktail-000`
      responses:
        "200":
          description: 레시피 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      userId:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Updated SampleDrink"
                      imageUrl:
                        type: string
                        nullable: true
                        example: "example/test.jpg"
                      ingredients:
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          "소다수": "적당량"
                          "민트 잎": "5개"
                          "라이트 럼": "3 온스"
                          "라임 웨지": "2개"
                          "심플 시럽": "1 온스"
                      recipe:
                        type: array
                        items:
                          type: string
                        example:
                          - "재료들을 함께 넣고 흔든다"
                          - "얼음과 함께 차갑게 마신다"
                      glassType:
                        type: string
                        example: "Old Fashioned"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T14:00:50.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-02T15:30:20.000Z"
                      status:
                        type: string
                        enum: [published, draft]
                        example: "published"
                      tastes:
                        type: array
                        items:
                          type: string
                        example: ["Sweet", "Bitter"]
                      aromas:
                        type: array
                        items:
                          type: string
                        example: ["Woody"]
                      colors:
                        type: array
                        items:
                          type: string
                        nullable: true
                        example: ["#FFFFFF"]
                      likes:
                        type: integer
                        example: 0
                      abv:
                        type: number
                        example: 15
                      views:
                        type: integer
                        example: 10
        "404":
          description: 존재하지 않는 레시피
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "R001"
                      message:
                        type: string
                        example: "해당 레시피를 찾을 수 없습니다."
                  success:
                    type: string
                    example: null
    delete:
      summary: 레시피 삭제
      description: 특정 레시피를 삭제합니다.
      operationId: deleteRecipe
      tags:
        - Recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
          description: 삭제할 레시피 ID
      responses:
        "200":
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
        "404":
          description: 존재하지 않는 레시피
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      errorCode:
                        type: string
                        example: "R001"
                      reason:
                        type: string
                        example: "해당 레시피를 찾을 수 없습니다."
                      data:
                        type: "null"
                        example: null
                  success:
                    type: "null"
                    example: null
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "FAIL"
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "U001"
                      message:
                        type: string
                        example: "수정 권한이 없습니다."
                  success:
                    type: "null"
                    example: null
  /api/v1/recipes/{recipeId}/like:
    patch:
      summary: "레시피 좋아요 추가"
      description: "레시피에 좋아요를 추가합니다."
      tags:
        - Recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          description: "조회할 레시피 ID (예: user-000, cocktail-000)"
          schema:
            type: string
      responses:
        "200":
          description: "좋아요 추가 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [SUCCESS]
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    type: object
                    properties:
                      recipeId:
                        type: string
                        example: "cocktail-6"
                      likes:
                        type: integer
                        example: 10
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [FAIL]
                    example: FAIL
                  error:
                    type: object
                    properties:
                      errorCode:
                        type: string
                        example: "R001"
                      reason:
                        type: string
                        example: "존재하지 않는 레시피입니다."
                      data:
                        type: "null"
                        example: null
                  success:
                    type: "null"
                    example: null
        "409":
          description: "이미 좋아요를 누른 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [FAIL]
                    example: FAIL
                  error:
                    type: object
                    properties:
                      errorCode:
                        type: string
                        example: "R002"
                      reason:
                        type: string
                        example: "이미 좋아요를 눌렀습니다."
                      data:
                        type: "null"
                        example: null
                  success:
                    type: "null"
                    example: null
  /api/v1/recipes/{recipeId}/like/cancel:
    patch:
      summary: "레시피 좋아요 취소"
      description: "레시피에 좋아요를 취소합니다."
      tags:
        - Recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          description: "조회할 레시피 ID (예: user-000, cocktail-000)"
          schema:
            type: string
      responses:
        "200":
          description: "좋아요 취소 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [SUCCESS]
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    type: object
                    properties:
                      recipeId:
                        type: string
                        example: "cocktail-6"
                      likes:
                        type: integer
                        example: 10
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [FAIL]
                    example: FAIL
                  error:
                    type: object
                    properties:
                      errorCode:
                        type: string
                        example: "R001"
                      reason:
                        type: string
                        example: "존재하지 않는 레시피입니다."
                      data:
                        type: "null"
                        example: null
                  success:
                    type: "null"
                    example: null
        "409":
          description: "좋아요 기록이 없는 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    enum: [FAIL]
                    example: FAIL
                  error:
                    type: object
                    properties:
                      errorCode:
                        type: string
                        example: "R003"
                      reason:
                        type: string
                        example: "좋아요 기록이 없습니다."
                      data:
                        type: "null"
                        example: null
                  success:
                    type: "null"
                    example: null
  /api/v1/users/tasting-note:
      post:
        summary: 사용자 테이스팅 노트 작성
        description: 사용자가 칵테일 또는 주류에 대한 테이스팅 노트를 작성합니다.
        tags: 
        - TastingNote
        parameters:
          - name: type
            in: query
            required: true
            description: "타입 (cocktail 또는 alcohol)"
            schema:
              type: string
              enum: [cocktail, alcohol]
        requestBody:
          description: "사용자가 작성한 테이스팅 노트"
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      name:
                        type: string
                        description: "테이스팅한 칵테일의 이름"
                      tasteRating:
                        type: array
                        items:
                          type: string
                        description: "맛 평가"
                      aromaRating:
                        type: array
                        items:
                          type: string
                        description: "향 평가"
                      abv:
                        type: number
                        format: float
                        description: "알콜 도수 (칵테일)"
                      color:
                        type: array
                        items:
                          type: string
                        description: "색상 평가"
                      description:
                        type: string
                        description: "테이스팅 노트에 대한 설명"
                    required:
                      - name
                      - tasteRating
                      - aromaRating
                      - abv
                      - color
                      - description

                  - type: object
                    properties:
                      name:
                        type: string
                        description: "테이스팅한 알코올의 이름"
                      tasteRating:
                        type: array
                        items:
                          type: string
                        description: "맛 평가"
                      aromaRating:
                        type: array
                        items:
                          type: string
                        description: "향 평가"
                      abvRating:
                        type: number
                        format: float
                        description: "알콜 도수 (알코올)"
                      finishRating:
                        type: number
                        format: float
                        description: "마지막 맛 평가"
                      description:
                        type: string
                        description: "테이스팅 노트에 대한 설명"
                    required:
                      - name
                      - tasteRating
                      - aromaRating
                      - abvRating
                      - finishRating
                      - description

        responses:
          '200':
            description: "테이스팅 노트 작성 성공"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: "테이스팅 노트 ID"
                        user_id:
                          type: integer
                          description: "사용자 ID"
                        tasteRating:
                          type: array
                          items:
                            type: string
                          description: "맛 평가"
                        aromaRating:
                          type: array
                          items:
                            type: string
                          description: "향 평가"
                        finishRating:
                          type: string
                          nullable: true
                          description: "후미 평가 (선택 사항)"
                        description:
                          type: string
                          description: "테이스팅 노트에 대한 설명"
                        createdAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: "생성일"
                        updatedAt:
                          type: string
                          format: date-time
                          nullable: true
                          description: "수정일"
          '400':
            description: "잘못된 요청 (필수 매개변수 누락)"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: "오류 메시지"
          '500':
            description: "서버 오류"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: "오류 메시지"
  /api/v1/users/tasting-note/{noteId}:
    patch:
      summary: 사용자 테이스팅 노트 수정
      description: 사용자가 칵테일 또는 주류에 대한 테이스팅 노트를 수정합니다.
      tags: 
        - TastingNote
      parameters:
        - name: noteId
          in: path
          required: true
          description: "수정할 테이스팅 노트의 ID"
          schema:
            type: integer
        - name: type
          in: query
          required: true
          description: "타입 (cocktail 또는 alcohol)"
          schema:
            type: string
            enum: [cocktail, alcohol]
      requestBody:
        description: "사용자가 수정한 테이스팅 노트"
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    tasteRating:
                      type: array
                      items:
                        type: string
                      description: "맛 평가"
                    aromaRating:
                      type: array
                      items:
                        type: string
                      description: "향 평가"
                    abv:
                      type: number
                      format: float
                      description: "알콜 도수 (칵테일)"
                    color:
                      type: array
                      items:
                        type: string
                      description: "색상 평가"
                    description:
                      type: string
                      description: "테이스팅 노트에 대한 설명"
                  required:
                    - tasteRating
                    - aromaRating
                    - abv
                    - color
                    - description

                - type: object
                  properties:
                    tasteRating:
                      type: array
                      items:
                        type: string
                      description: "맛 평가"
                    aromaRating:
                      type: array
                      items:
                        type: string
                      description: "향 평가"
                    abvRating:
                      type: number
                      format: float
                      description: "알콜 도수 (알코올)"
                    finishRating:
                      type: number
                      format: float
                      description: "마지막 맛 평가"
                    description:
                      type: string
                      description: "테이스팅 노트에 대한 설명"
                  required:
                    - tasteRating
                    - aromaRating
                    - abvRating
                    - finishRating
                    - description

      responses:
        '200':
          description: "테이스팅 노트 수정 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: "테이스팅 노트 ID"
                      userId:
                        type: integer
                        description: "사용자 ID"
                      tasteRating:
                        type: array
                        items:
                          type: string
                        description: "맛 평가"
                      aromaRating:
                        type: array
                        items:
                          type: string
                        description: "향 평가"
                      finishRating:
                        type: string
                        nullable: true
                        description: "후미 평가 (선택 사항)"
                      description:
                        type: string
                        description: "테이스팅 노트에 대한 설명"
                      createdAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: "생성일"
                      updatedAt:
                        type: string
                        format: date-time
                        nullable: true
                        description: "수정일"
        '400':
          description: "잘못된 요청 (필수 매개변수 누락)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
        '404':
          description: "테이스팅 노트를 찾을 수 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
        '403':
          description: "수정 권한이 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
        '500':
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
    delete:
      summary: 사용자 테이스팅 노트 삭제
      description: 사용자가 작성한 칵테일 또는 주류의 테이스팅 노트를 삭제합니다.
      tags:
        - TastingNote
      parameters:
        - name: noteId
          in: path
          required: true
          description: "삭제할 테이스팅 노트 ID"
          schema:
            type: integer
        - name: type
          in: query
          required: true
          description: "타입 (cocktail 또는 alcohol)"
          schema:
            type: string
            enum: [cocktail, alcohol]
      responses:
        '200':
          description: "테이스팅 노트 삭제 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "삭제 완료 메시지"
        '400':
          description: "잘못된 요청 (필수 매개변수 누락)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
        '404':
          description: "테이스팅 노트가 존재하지 않음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"
        '500':
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "오류 메시지"



  paths:
  /api/v1/users/register:
    post:
      summary: 회원가입
      description: 이메일, 비밀번호, 닉네임을 통해 회원가입.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@example.com"
                password:
                  type: string
                  example: "password123"
                nickname:
                  type: string
                  example: "TasteLover"
      responses:
        201:
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원가입이 완료되었습니다."
        400:
          description: 잘못된 요청 데이터
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "이메일 형식이 잘못되었습니다."
        500:
          description: 서버 오류

  /api/v1/users/login:
    post:
      summary: 로그인
      description: 이메일과 비밀번호로 로그인.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인 성공"
                  token:
                    type: string
                    example: "jwt_token_here"
        401:
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "이메일 또는 비밀번호가 잘못되었습니다."
        500:
          description: 서버 오류

  /api/v1/users/logout:
    post:
      summary: 로그아웃
      description: 인증 토큰을 삭제하여 로그아웃 처리.
      tags:
        - User
      responses:
        200:
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그아웃이 완료되었습니다."
        500:
          description: 서버 오류

  /api/v1/users/delete-user:
    delete:
      summary: 회원 탈퇴
      description: 인증된 사용자가 회원 탈퇴 요청.
      tags:
        - User
      responses:
        200:
          description: 회원 탈퇴 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원 탈퇴가 완료되었습니다."
        401:
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "인증 실패"
        500:
          description: 서버 오류

  /api/v1/users/social-login:
    post:
      summary: 카카오 소셜 로그인
      description: 카카오 API를 통한 소셜 로그인.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  example: "your_kakao_access_token"
      responses:
        200:
          description: 카카오 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "소셜 로그인 성공"
        400:
          description: 액세스 토큰 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "액세스 토큰이 필요합니다."
        401:
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "카카오 인증 실패"
        500:
          description: 서버 오류
